version: '3.5'

services:
    # SIP gateway (audio)
    jigasi:
        image: zalozbadev/jitsi_jigasi:${CUSTOM_RELEASE}
#        build: ./jigasi
        restart: ${RESTART_POLICY:-unless-stopped}
        ports:
            - '${JIGASI_PORT_MIN:-20000}-${JIGASI_PORT_MAX:-20050}:${JIGASI_PORT_MIN:-20000}-${JIGASI_PORT_MAX:-20050}/udp'
        volumes:
            - ${CONFIG}/jigasi:/config:Z
            - ${CONFIG}/transcripts:/tmp/transcripts:Z
        environment:
            - AUTOSCALER_SIDECAR_KEY_FILE
            - AUTOSCALER_SIDECAR_KEY_ID
            - AUTOSCALER_SIDECAR_GROUP_NAME
            - AUTOSCALER_SIDECAR_HOST_ID
            - AUTOSCALER_SIDECAR_INSTANCE_ID
            - AUTOSCALER_SIDECAR_PORT
            - AUTOSCALER_SIDECAR_REGION
            - AUTOSCALER_SIDECAR_SHUTDOWN_POLLING_INTERVAL
            - AUTOSCALER_SIDECAR_STATS_POLLING_INTERVAL
            - AUTOSCALER_URL
            - BOSH_URL_PATTERN
            - ENABLE_AUTH
            - ENABLE_GUESTS
            - XMPP_AUTH_DOMAIN
            - XMPP_GUEST_DOMAIN
            - XMPP_MUC_DOMAIN
            - XMPP_INTERNAL_MUC_DOMAIN
            - XMPP_SERVER
            - XMPP_PORT
            - XMPP_DOMAIN
            - XMPP_HIDDEN_DOMAIN
            - PUBLIC_URL
            - JIGASI_CONFIGURATION
            - JIGASI_DISABLE_SIP
            - JIGASI_JVB_TIMEOUT
            - JIGASI_LOCAL_REGION
            - JIGASI_LOG_FILE
            - JIGASI_SIP_URI
            - JIGASI_SIP_PASSWORD
            - JIGASI_SIP_SERVER
            - JIGASI_SIP_PORT
            - JIGASI_SIP_TRANSPORT
            - JIGASI_SIP_DEFAULT_ROOM
            - JIGASI_XMPP_USER
            - JIGASI_XMPP_PASSWORD
            - JIGASI_BREWERY_MUC
            - JIGASI_PORT_MIN
            - JIGASI_PORT_MAX
            - JIGASI_HEALTH_CHECK_SIP_URI
            - JIGASI_HEALTH_CHECK_INTERVAL
            - JIGASI_SIP_KEEP_ALIVE_METHOD
            - JIGASI_ENABLE_SDES_SRTP
            - ENABLE_TRANSCRIPTIONS
            - JIGASI_TRANSCRIBER_BACKEND
            - JIGASI_TRANSCRIBER_ADVERTISE_URL
            - JIGASI_TRANSCRIBER_RECORD_AUDIO
            - JIGASI_TRANSCRIBER_SEND_TXT
            - GC_PROJECT_ID
            - GC_PRIVATE_KEY_ID
            - GC_PRIVATE_KEY
            - GC_CLIENT_EMAIL
            - GC_CLIENT_ID
            - GC_CLIENT_CERT_URL
            - SHUTDOWN_REST_ENABLED
            - SENTRY_DSN="${JIGASI_SENTRY_DSN:-0}"
            - SENTRY_ENVIRONMENT
            - SENTRY_RELEASE
            - TZ
            - USE_TRANSLATOR_IN_CONFERENCE
            - VOSK_SERVER
            - ENABLE_CUSTOM_TRANSLATION
            - CUSTOM_TRANSLATION_APIURL
            - CUSTOM_TRANSLATION_APIKEY
        depends_on:
            - prosody
        networks:
            meet.jitsi:

    # VOSK / Whisper container
    vosk-hsb-whisper:
        build:
            context: .
            dockerfile: docker_vosk/vosk_server_whisper/full-vosk-whisper-stack.Dockerfile
        restart: ${RESTART_POLICY:-unless-stopped}
        environment:
            - VOSK_SAMPLE_RATE
            - VOSK_LOG_AUDIO
            - MODEL_PATH_FULL
        volumes:
            - ./logs:/logs
            - ./whisper:/whisper
#        ports:
#            - 2700:2700
        depends_on:
            - jigasi
        networks:
            meet.jitsi:


    # VOSK / Kaldi container
    vosk-de:
        # when using German recognition
        image: alphacep/kaldi-de:latest
        restart: ${RESTART_POLICY:-unless-stopped}
#        ports:
#            - 2700:2700
        depends_on:
            - jigasi
        networks:
            meet.jitsi:


    # VOSK / Kaldi container
    vosk-en:
        # when using German recognition
        image: alphacep/kaldi-en:latest
        restart: ${RESTART_POLICY:-unless-stopped}
 #       ports:
 #           - 2700:2700
        depends_on:
            - jigasi
        networks:
            meet.jitsi:

    # LibreTranslate container for testing with de/en translation
    # Test with a cmdline like this (works only with exposed port):
    # curl -X POST http://localhost:5000/translate -H "Content-Type: application/json" -d '{"q": "Dies ist ein Versuch, die LibreTranslate API direkt anzusprechen.", "source": "de", "target": "en"}'
    libretranslate:
        # this is the image from docker hub
        image: libretranslate/libretranslate:v1.6.1
        restart: ${RESTART_POLICY:-unless-stopped}
        # disabled when using internal network only
        #ports:
        #  - "5000:5000"
        healthcheck:
            test: ['CMD-SHELL', './venv/bin/python scripts/healthcheck.py']     
        environment:
            - LT_UPDATE_MODELS=true
            - LT_LOAD_ONLY=en,de
        volumes:
            # check docker log file for folder permision issues!
            - ./libretranslate_models:/home/libretranslate/.local
        networks:
            meet.jitsi:

